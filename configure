#!/bin/sh
# configure written by Zhang Maiyun
# GEN:config.mk
# Licence:LGPL

prefix='/usr/local'
cc="gcc"
ar="ar"
rm="rm"
target=""
cflags='-Os -shared -fPIC'
cflags_win='-O2 -DPLAT=1 -Wall -c -I../include -lm'
cflags_unix='-O2 -DPLAT=0 -Wall -c -I../include -lm'
files='file/fcopy.c file/fsize.c file/iofile.c \
      main/colorprintf.c main/error.c main/getch.c \
      main/itoa.c main/mysh.c main/randomnum.c\
      main/sbl.c main/mret.c main/getopt.c\
      math/average.c math/calc.c math/eular.c math/gcf.c math/ispn.c\
      math/isrp.c math/lcm.c math/prtpn.c \
      stack/clearstack.c stack/destorystack.c stack/getlen.c \
      stack/initstack.c stack/pop.c stack/push.c \
      string/module.c string/mtscat.c \
      include/slib.h'

for opt do
  eval opt=\"$opt\"
  case "$opt" in
  --prefix=*) prefix=`echo $opt | cut -d '=' -f 2`
  ;;
  --cc=*) cc=`echo $opt | cut -d '=' -f 2`
  ;;
  --ar=*) ar=`echo $opt | cut -d '=' -f 2`
  ;;
  --rm=*) rm=`echo $opt | cut -d '=' -f 2`
  ;;
  --extra-cflags=*) cflags-win=$cflags-win `echo $opt | cut -d '=' -f 2`
  ;;
  --enable-static) cflags= -c -Os
  ;;
  --help|-h) show_help="yes"
  ;;
  --target=*) target=`echo $opt |cut -d '=' -f 2`
  ;;
  *) echo "configure: WARNING: unrecognized option $opt"
  ;;
  esac
done

if [[ $target = "" ]] ; then 
  case `uname` in
  Linux) target=unix
  ;;
  MINGW*|MSYS*|CYGWIN*) target=win
  ;;
  *) echo 'configure: Error:unable to determine system type, please add option --target=win or unix';exit 1
  esac
fi

if [ -f config.mk ] ; then
mv config.mk config.mk~
fi

echo '#config.mk generated by configure'>>config.mk
echo CC=`echo $cc`>>config.mk
echo AR=`echo $ar`>>config.mk
echo RM=`echo $rm`>>config.mk
echo CFLAGS=`echo $cflags`>>config.mk
echo CFLAGS-WIN=`echo $cflags_win`>>config.mk
echo CFLAGS-UNIX=`echo $cflags_unix`>>config.mk
echo TARGET=`echo $target`>>config.mk
echo configure:generated config.mk

