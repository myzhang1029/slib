#!/bin/sh
# configure written by Zhang Maiyun
# GEN:config.mk
# Licence:LGPL

prefix='/usr/local'
cc="gcc"
ar="ar"
rm="rm"
build="err"
cflags='-Os -shared -fPIC'
ldflags='-static -lm'
cflags_win='-O2 -DPLAT=1 -pedantic -W -Wall -Wno-variadic-macros -c -I../include'
cflags_unix='-O2 -DPLAT=0 -pedantic -W -Wall -Wno-variadic-macros -c -I../include'

help_me()
{
	echo 'Usage: configure [option][=vaule]'
	echo ''
	echo 'Options:'
	echo '	--prefix=prefix:Set prefix;'
	echo '	--cc=complier:Set complier.(Must support -Dmacro=vaule, -c, -Iinclude, -llibrary, -W, -On, -pedantic) e.g. To cross complie;'
	echo '	--ar=ar:Set libmaker.(Should support "rcs" option);'
	echo '	--rm=rm:Set remover(Should support "-f" option);'
	echo '	--extra-cflags=more-cflags:add more-cflags to "CFLAGS";'
	echo '	--target=target:Set target(win|unix), not like "i686-linux-gnu";'
	echo '	--help,-h:Display this help information.'
	echo 'Project maintained by Zhang Maiyun <myzhang1029@163.com>.'
	exit 0
}

for opt do
  eval opt=\"$opt\"
  case "$opt" in
  --prefix=*) prefix=`echo $opt | cut -d '=' -f 2`
  ;;
  --cc=*) cc=`echo $opt | cut -d '=' -f 2`
  ;;
  --ar=*) ar=`echo $opt | cut -d '=' -f 2`
  ;;
  --rm=*) rm=`echo $opt | cut -d '=' -f 2`
  ;;
  --extra-cflags=*) cflags_win="$cflags_win `echo $opt | cut -d '=' -f 2`"
  cflags_unix="$cflags_unix `echo $opt | cut -d '=' -f 2`"
  ;;
  --help|-h) help_me
  ;;
  --target=*) build=`echo $opt | cut -d '=' -f 2`
  if [ "$build" != "unix" ] && [ "$build" != "win" ] ; then
    printf '\033[1mconfigure:\033[31m Error:\033[30m unknown system type "%s", type "./configure --help" for more infomation\033[0m\n' $build
    exit 1
  fi
  ;;
  *) printf '\033[1mconfigure:\033[33m Warning:\033[30m unrecognized option %s\033[0m\' "$opt"
  ;;
  esac
done

if [ "$build" = "err" ] ; then 
  printf "Checking build system type.. "
  case `uname` in
  Linux|*BSD|Darwin) build=unix
  ;;
  MINGW*|MSYS*|CYGWIN*) build=win
  ;;
  *) echo unknown
     printf '\033[1mconfigure:\033[31m Error:\033[30m unable to determine system type, please add option --target=win or unix\033[0m\n'
     exit 1
  esac
  echo $build
fi

if [ -f config.mk ] ; then
echo configure:Backup config
mv config.mk config.mk~
fi

echo '#config.mk generated by configure'>>config.mk
echo CC=`echo $cc`>>config.mk
echo AR=`echo $ar`>>config.mk
echo RM=`echo $rm`>>config.mk
echo CFLAGS=`echo $cflags`>>config.mk
echo CFLAGS-win=`echo $cflags_win`>>config.mk
echo CFLAGS-unix=`echo $cflags_unix`>>config.mk
echo BUILD=`echo $build`>>config.mk
echo PREFIX=`echo $prefix`>>config.mk
echo LDFLAGS=`echo $ldflags`>>config.mk
echo configure:Generated config.mk
printf 'configure:\033[32m STATUS:FINISHED\033[30m\n'

