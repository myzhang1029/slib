#!/bin/sh
# GEN:config.mk
# 
#  Guess values for system-dependent variables and create Makefiles.
#
#  Copyright (C) 2017, 2018 Zhang Maiyun
#
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#  This file is part of the slib.
#  The slib  is free software; you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Default/init vaule of variables
srcdir=`dirname $0`
cross=""
prefix="/usr/local"
libdir=""
includedir=""
mandir=""
infodir=""
cc="${CC}"
ar="${AR}"
rm="rm"
build=""
cflags="${CFLAGS} ${CPPFLAGS} -Wno-variadic-macros -W -Wall -pedantic -c -O3 -I${srcdir}/include"
soflags=""
cfiles="`cd ${srcdir};find src -type f -name '*.c'`"
hfiles="`find ${srcdir}/include -type f -name '*.h'`"
exesuf=""
# Get constants defined in CMakeLists.txt
name="libsbl"
version="`grep project ${srcdir}/CMakeLists.txt|cut -d\  -f3`"
description="`grep DESCRIPTION ${srcdir}/CMakeLists.txt|cut -f2 -d$'\"'`"

# Function strstr
strstr(){
	expr match "$1" ".*$2" >/dev/null&&return 0
	return 1
}

# Header file check
# $1: name
check_header(){
    printf "Checking for $1... "
    cat > conftest.c << ACEOF
#include <$1>
int main(){}
ACEOF
    if ! ${cc} conftest.c -o conftest;
    then
        echo no
        rm -f conftest.c conftest conftest.exe
        return 1
    else
        echo yes
        rm -f conftest.c conftest conftest.exe
        return 0
    fi
}

# Help
help_me()
{
	printf 'Usage: %s/configure [option=<vaule> | --help]\n' ${srcdir}
	printf 'Options:\n'
	printf '  --prefix=PREFIX\tSet prefix;\n'
	printf '  --build=BUILD\tconfigure for building on BUILD [guessed]'
	printf '  --host=HOST\tcross-compile to build programs to run on HOST [BUILD]'
	printf '  --target=TARGET\tIgnored'
    printf '  --rm=RM\tSet remover(Should support "-f" option);\n'
	printf '  --exesuf=SUFFIX\tSet suffix of shared objects;\n'
	printf '  --soflags=SOFLAGS\tSet CFLAGS for shared objects\n'
	printf '  --{bin,lib,include,man,info}dir=DIR\t Set bindir, libdir, includedir, mandir, infodir;\n'
	printf '  --help,-h\tDisplay this help information.\n\n'
    printf 'Some influential environment variables:'
    printf '  AR\tlibmaker'
    printf '  CC\tC compiler'
    printf '  CFLAGS\tC flags'
	printf '\nProject maintained by Zhang Maiyun <myzhang1029@163.com>.\n'
	exit 0
}

# Parse arguments
for opt do
  eval opt=\"${opt}\"
  case "${opt}" in
  --prefix=*) prefix=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --host=*) cross=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --build=*)
  ;;
  --target=*)
  ;;
  --rm=*) rm=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --exesuffix=*) exesuf=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --bindir=*) bindir=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --libdir=*) libdir=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --includedir=*) includedir=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --mandir=*) mandir=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --infodir=*) infodir=`echo ${opt} | cut -d '=' -f 2`
  ;;
  --soflags=*) soflags="${soflags} `echo ${opt} | cut -d '=' -f 2`"
  ;;
  --help|-h) help_me
  ;;
  *) printf '\033[1mconfigure: \033[33mWarning: \033[0munrecognized option %s\n' "${opt}"
  ;;
  esac
done

w=0
# Check for C compiler
printf "Checking for C Compiler... "
if [ "$cc" = "" ] ; then
  if ${cross}-clang -v > /dev/null 2>&1; then
    cc="${cross}-clang"
  elif ${cross}-gcc -v > /dev/null 2>&1; then
    cc="${cross}-gcc"
    cflags="-Wno-misleading-indentation $cflags"
  elif ${cross}-tcc -v > /dev/null 2>&1; then
    cc="${cross}-tcc"
  elif ${cross}-cc -v > /dev/null 2>&1; then
    cc="${cross}-cc"
  elif clang -v > /dev/null 2>&1; then
    cc="clang"
    w=1
  elif gcc -v > /dev/null 2>&1; then
    cc="gcc"
    w=1
    cflags="-Wno-misleading-indentation $cflags"
  elif tcc -v > /dev/null 2>&1; then
    cc="tcc"
    w=1
  elif cc -v > /dev/null 2>&1; then
    cc="cc"
    w=1
  else
    echo no
    printf '\033[1mconfigure: \033[31mError: \033[30mNo C compiler found!\nPlease specify. Read "./configure --help" for more infomation\033[0m\n'
    exit 1
  fi
else 
  strstr "$cc" "gcc" && cflags="-Wno-misleading-indentation $cflags"
fi
echo $cc
if [ "$cross" != "" ] && [ $w -eq 1 ];
then
    echo '\033[1mconfigure: \033[33mWarning: \033[0musing unprefixed cc when cross-compiling'
fi

w=0
# Check for ar
printf "Checking for ar... "
if [ "$ar" = "" ] ; then
  if which ${cross}-ar > /dev/null 2>&1; then
    ar="${cross}-ar"
  elif which ar > /dev/null 2>&1; then
    ar="ar"
    w=1
  else
    echo no
    printf '\033[1mconfigure: \033[31mError: \033[30mNo ar found!\nPlease specify. Read "./configure --help" for more infomation\033[0m\n'
    exit 1
  fi
fi
echo $ar
if [ "$cross" != "" ] && [ $w -eq 1 ];
then
    echo '\033[1mconfigure: \033[33mWarning: \033[0musing unprefixed ar when cross-compiling'
fi

# For exesuf
printf "Checking suffix for shared objects... "

if [ "$exesuf" = "" ] ; then
  case `uname` in
    Linux|*BSD|GNU) exesuf=".so";
	    soflags="-fPIC -shared -Os"
    ;;
    Darwin) exesuf=".dylib";
	    soflags="-dynamiclib -current_version $version"
    ;;
    MINGW*|MSYS*|CYGWIN*) exesuf=".dll";soflags="-shared"
    ;;
    *) echo unknown
	    printf '\033[1mconfigure: \033[31mError: \033[0munable to determine suffix for shared objects(aka dylib/so/dll), please add option --exesuffix\n'
      exit 1
  esac
fi
echo $exesuf

if check_header "alloca.h";
then
    alloca_h=1
else
    alloca_h=0
fi

if check_header "fcntl.h";
then
    fcntl_h=1
else
    fcntl_h=0
fi

if check_header "termios.h";
then
    termios_h=1
else
    termios_h=0
fi

if check_header "unistd.h";
then
    unistd_h=1
else
    unistd_h=0
fi

if [ "$libdir" = "" ] ; then
	libdir="$prefix/lib"
fi
if [ "$includedir" = "" ] ; then
	includedir="$prefix/include"
fi

# Write output
echo Generating config.mk
echo '# config.mk generated by configure'>config.mk
echo CC=`echo $cc`>>config.mk
echo AR=`echo $ar`>>config.mk
echo RM=`echo $rm`>>config.mk
echo CFLAGS=`echo $cflags`>>config.mk
echo PREFIX=`echo $prefix`>>config.mk
echo SRCDIR=`echo $srcdir`>>config.mk
echo CFILES=`echo $cfiles`>>config.mk
echo HFILES=`echo $hfiles`>>config.mk
echo EXESUF=`echo $exesuf`>>config.mk
echo SOFLAGS=`echo $soflags`>>config.mk
echo LIBDIR=`echo $libdir`>>config.mk
echo INCLUDEDIR=`echo $includedir`>>config.mk
cp ${srcdir}/Makefile.in Makefile

echo Generating sbl.pc
sed "s,@CMAKE_INSTALL_PREFIX@,${prefix},;s,@CMAKE_INSTALL_LIBDIR@,lib,;\
    s,@CMAKE_INSTALL_INCLUDEDIR@,include,;s,@PROJECT_NAME@,${name},;\
    s,@PROJECT_DESCRIPTION@,${description},;\
    s,@PROJECT_VERSION@,${version},;" ${srcdir}/sbl.pc.in > sbl.pc

echo Generating config.h
printf 'configure: \033[32mfinished\033[30m\n'
