!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	Development	//
BUFFERSIZE	include/slib.h	68;"	d
CC	config.mk	/^CC=gcc$/;"	m
CFILES	file/Makefile	/^CFILES=fcopy.c fsize.c iofile.c$/;"	m
CFILES	main/Makefile	/^CFILES=colorprintf.c error.c getch.c getopt.c itoa.c mret.c mysh.c randomnum.c sbl.c$/;"	m
CFILES	math/Makefile	/^CFILES=average.c calc.c eular.c gcf.c ispn.c isrp.c lcm.c prtpn.c$/;"	m
CFILES	stack/Makefile	/^CFILES=push.c pop.c getlen.c clearstack.c initstack.c destorystack.c$/;"	m
CFILES	string/Makefile	/^CFILES=mtscat.c module.c$/;"	m
CFLAGS	config.mk	/^CFLAGS=-Os -shared -fPIC$/;"	m
CFLAGS-UNIX	config.mk	/^CFLAGS-UNIX=-O2 -DPLAT=0 -Wall -c -I..\/include -lm$/;"	m
CFLAGS-WIN	config.mk	/^CFLAGS-WIN=-O2 -DPLAT=1 -Wall -c -I..\/include -lm $/;"	m
Calculate	math/calc.c	/^static int Calculate(char *arr,void *result)$/;"	f	file:
ClearStack	stack/clearstack.c	/^OPT int ClearStack(sqStack *s)$/;"	f
D_STABLE	include/slib.h	100;"	d
D_TESTING	include/slib.h	102;"	d
D_UNSTABLE	include/slib.h	101;"	d
DestroyStack	stack/destorystack.c	/^OPT int DestroyStack(sqStack *s)$/;"	f
ELIDE_CODE	main/getopt.c	59;"	d	file:
FILES	config.mk	/^FILES=file\/fcopy.c file\/fsize.c file\/iofile.c \\$/;"	m
FOREGROUND_WHITE	include/slib.h	116;"	d
GETOPT_INTERFACE_VERSION	main/getopt.c	55;"	d	file:
GetLen	stack/getlen.c	/^OPT int GetLen(sqStack *s)$/;"	f
InfixToPostfix	math/calc.c	/^static int InfixToPostfix(char *infix,char *postfix)$/;"	f	file:
InitStack	stack/initstack.c	/^OPT int InitStack(sqStack *s,unsigned stackSize,unsigned typeSize)$/;"	f
NONOPTION_P	main/getopt.c	438;"	d	file:
NULL	include/slib.h	57;"	d
OPT	include/slib.h	76;"	d
OPT	include/slib.h	78;"	d
Pop	stack/pop.c	/^OPT int Pop(sqStack *s,void *e)$/;"	f
Push	stack/push.c	/^OPT int Push(sqStack *s,void *e)$/;"	f
RM	config.mk	/^RM=rm$/;"	m
SBLLIB_VERSION	include/slib.h	31;"	d
SERROR	include/slib.h	66;"	d
SERR_INPUTINVAL	include/slib.h	87;"	d
SERR_LIBCALLFAILED	include/slib.h	86;"	d
SERR_STACKERR	include/slib.h	88;"	d
SFALSE	include/slib.h	65;"	d
SPECIAL_TREATMENT_FOR_W	main/getopt.c	97;"	d	file:
STKELMT	include/slib.h	67;"	d
STRUE	include/slib.h	64;"	d
SWAP_FLAGS	main/getopt.c	187;"	d	file:
SWAP_FLAGS	main/getopt.c	195;"	d	file:
SWAP_FLAGS	main/getopt.c	198;"	d	file:
S_INLINE	include/slib.h	82;"	d
Stack	include/slib.h	/^typedef struct Stack$/;"	s
String	include/slib.h	/^typedef char * String;$/;"	t
TARGET	file/Makefile	/^TARGET=fileend$/;"	m
TARGET	main/Makefile	/^TARGET=mainend$/;"	m
TARGET	math/Makefile	/^TARGET=mathend$/;"	m
TARGET	stack/Makefile	/^TARGET=stackend$/;"	m
TARGET	string/Makefile	/^TARGET=stringend$/;"	m
_	main/getopt.c	86;"	d	file:
_	main/getopt.c	90;"	d	file:
_	main/getopt.c	91;"	d	file:
_Bool	include/slib.h	109;"	d
_CRT_NONSTDC_NO_WARINGS	include/slib.h	54;"	d
_CRT_SECURE_NO_WARNINGS	include/slib.h	52;"	d
_GETOPT_H	include/slib.h	319;"	d
_INTSZOF	include/slib.h	70;"	d
_NO_PROTO	main/getopt.c	35;"	d	file:
__FORCE_GLIBC	main/getopt.c	42;"	d	file:
__GNUC_PREREQ	include/slib.h	335;"	d
__THROW	include/slib.h	338;"	d
__THROW	include/slib.h	340;"	d
__need_getopt	include/slib.h	486;"	d
__set_errno	include/slib.h	61;"	d
_getopt_initialize	main/getopt.c	/^_getopt_initialize (attribute_unused int argc, attribute_unused char *const *argv, const char *optstring,$/;"	f	file:
_getopt_internal	main/getopt.c	/^_getopt_internal (int argc, char *const *argv, const char *optstring,$/;"	f	file:
_getopt_internal_r	main/getopt.c	/^_getopt_internal_r (int argc, char *const *argv, const char *optstring,$/;"	f	file:
_serrloc	main/error.c	/^OPT int *  _serrloc( void )$/;"	f
attribute_hidden	main/getopt.c	104;"	d	file:
average	math/average.c	/^OPT double average(cui amt,...)$/;"	f
base	include/slib.h	/^	void *base;$/;"	m	struct:Stack
black	include/slib.h	/^	black=4,$/;"	e	enum:cpfcolors
blue	include/slib.h	/^	blue=5,$/;"	e	enum:cpfcolors
bool	include/slib.h	105;"	d
bool	include/slib.h	110;"	d
calculate	math/calc.c	/^OPT double calculate(ccp infix)$/;"	f
ccp	include/slib.h	/^typedef const char * const ccp;$/;"	t
colorprintf	main/colorprintf.c	/^OPT int colorprintf(enum cpfcolors fcolor,ccp format,...)$/;"	f
cpfcolors	include/slib.h	/^enum cpfcolors$/;"	g
cui	include/slib.h	/^typedef const unsigned int cui;\/\/type aliases$/;"	t
cul	include/slib.h	/^typedef const unsigned long cul;$/;"	t
eular	math/eular.c	/^OPT int eular(cui n)$/;"	f
exchange	main/getopt.c	/^exchange (char **argv, struct _getopt_data *d)$/;"	f	file:
false	include/slib.h	107;"	d
false	include/slib.h	111;"	d
fcopy	file/fcopy.c	/^OPT int  fcopy( ccp oldname, ccp newname ) \/* user - sec7 *\/$/;"	f
flag	include/slib.h	/^  int *flag;$/;"	m	struct:option
fsize	file/fsize.c	/^OPT long  fsize( FILE * stream )$/;"	f
gcf	math/gcf.c	/^OPT int gcf(cui n1,cui n2)$/;"	f
getch	main/getch.c	/^OPT int getch(void) $/;"	f
getmname	string/module.c	/^OPT int getmname(ccp fullpath,char *mname)$/;"	f
getmpath	string/module.c	/^OPT int getmpath(ccp fullpath,char *mpath)$/;"	f
getopt	include/slib.h	462;"	d
getoptGS	main/getopt.c	/^getoptGS (int argc, char *const *argv, const char *optstring)$/;"	f
getoptS	main/getopt.c	/^getoptS (int argc, char *const *argv,$/;"	f
getopt_data	main/getopt.c	/^static struct _getopt_data getopt_data;$/;"	v	typeref:struct:_getopt_data	file:
getopt_longGS	main/getopt.c	/^getopt_longGS (int argc, char *const *argv, const char *options,$/;"	f
getopt_long_onlyGS	main/getopt.c	/^getopt_long_onlyGS (int argc, char *const *argv, const char *options,$/;"	f
getret	main/mret.c	/^int *getret(mtret ret)$/;"	f
green	include/slib.h	/^	green=2,$/;"	e	enum:cpfcolors
has_arg	include/slib.h	/^  int has_arg;$/;"	m	struct:option
iofile	file/iofile.c	/^OPT int  iofile(FILE *origin,FILE *dest)$/;"	f
ispn	math/ispn.c	/^OPT int ispn( cul testingnum )$/;"	f
isrp	math/isrp.c	/^OPT int  isrp (cul n1,cul n2)$/;"	f
itoaS	main/itoa.c	/^ char* itoaS(int value, char* string, int radix)$/;"	f
lcm	math/lcm.c	/^OPT int lcm(cui n1,cui n2)$/;"	f
lenth	include/slib.h	/^	size_t lenth;$/;"	m	struct:mtrt
ltoaS	main/itoa.c	/^ char* ltoaS(long value, char* string, int radix)$/;"	f
mkret	main/mret.c	/^mtret mkret(size_t lenth,...)$/;"	f
msgloop	include/slib.h	117;"	d
mtret	include/slib.h	/^}mtret;$/;"	t	typeref:struct:mtrt
mtreturn	include/slib.h	97;"	d
mtrt	include/slib.h	/^typedef struct mtrt$/;"	s
mtscat	string/mtscat.c	/^OPT char *  mtscat(cui amount,...)$/;"	f
mysh	main/mysh.c	/^OPT int  mysh( ccp path )$/;"	f
name	include/slib.h	/^  const char *name;$/;"	m	struct:option
no_argument	include/slib.h	413;"	d
optarg	main/getopt.c	/^char *optarg;$/;"	v
opterr	main/getopt.c	/^int opterr = 1;$/;"	v
optind	main/getopt.c	/^int optind = 1;$/;"	v
option	include/slib.h	/^struct option$/;"	s
optional_argument	include/slib.h	415;"	d
optopt	main/getopt.c	/^int optopt = '?';$/;"	v
pathsep	include/slib.h	92;"	d
pathsep	include/slib.h	94;"	d
prterr	main/error.c	/^OPT int  prterr(ccp fmt,... )$/;"	f
prtfile	file/iofile.c	/^OPT int prtfile(FILE *stream)$/;"	f
prtpn	math/prtpn.c	/^OPT int  prtpn( FILE*fp, cul minimum, cul maximum )$/;"	f
purple	include/slib.h	/^	purple=6,$/;"	e	enum:cpfcolors
randomnum	main/randomnum.c	/^OPT long  randomnum( cui seed,cul maximum,cul minimum )$/;"	f
red	include/slib.h	/^	red=1,$/;"	e	enum:cpfcolors
regwndcls	include/slib.h	127;"	d
required_argument	include/slib.h	414;"	d
retind	main/mret.c	/^int retind=0;$/;"	v
rsbl_frame	main/sbl.c	/^OPT int  rsbl_frame(int code)$/;"	f
ser	main/error.c	/^int ser;$/;"	v
serr	include/slib.h	85;"	d
sqStack	include/slib.h	/^} sqStack;$/;"	t	typeref:struct:Stack
stackSize	include/slib.h	/^	int stackSize;$/;"	m	struct:Stack
top	include/slib.h	/^	void *top;$/;"	m	struct:Stack
true	include/slib.h	106;"	d
true	include/slib.h	112;"	d
typeSize	include/slib.h	/^	int typeSize;$/;"	m	struct:Stack
ultoaS	main/itoa.c	/^ char* ultoaS(unsigned long value, char* string, int radix)$/;"	f
uschar	include/slib.h	/^typedef unsigned char uschar;$/;"	t
usint	include/slib.h	/^typedef unsigned int usint;$/;"	t
uslong	include/slib.h	/^typedef unsigned long uslong;$/;"	t
val	include/slib.h	/^	int **val;$/;"	m	struct:mtrt
val	include/slib.h	/^  int val;$/;"	m	struct:option
varg	include/slib.h	72;"	d
vend	include/slib.h	73;"	d
vlist	include/slib.h	/^typedef char * vlist;$/;"	t
vstart	include/slib.h	71;"	d
wsbl_frame	main/sbl.c	/^OPT uslong  wsbl_frame(int ch)$/;"	f
yellow	include/slib.h	/^	yellow=3,$/;"	e	enum:cpfcolors
